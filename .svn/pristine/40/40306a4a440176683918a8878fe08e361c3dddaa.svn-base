package enklikanketa.com.a1kapanel;

import android.content.Context;
import android.os.AsyncTask;

import org.json.JSONException;
import org.json.JSONObject;

import enklikanketa.com.a1kapanel.Libraries.GeneralLib;
import enklikanketa.com.a1kapanel.System.Database;
import enklikanketa.com.a1kapanel.System.ServerCommunication;

/**
 * Created by podkrizniku on 07/12/2017.
 */

public class sendRegistrationIDTask extends AsyncTask<Object, Object, String> {

    //application context cannot be leaked
    private Context ctx;
    private String registration_id;

    /**
     *
     * @param context - Context
     * @param registration_id - registration id token for firebase messaging
     */
    public sendRegistrationIDTask(Context context, String registration_id) {
        ctx = context.getApplicationContext();
        this.registration_id = registration_id;
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
    }

    @Override
    protected void onPostExecute(String result) {
        super.onPostExecute(result);
        //Log.d("1kapanel", "result di" + result);

        if (result != null) {
            try {
                JSONObject obj = new JSONObject(result);

                if (obj.has("note")) {
                    //all ok
                } else {
                    GeneralLib.reportCrash(new Exception("sendRegistrationIDTask no note in response"), result);
                }

            } catch (JSONException e) {
                //Log.e("1kapanel", "sendRegistrationIDTask.class onPostExecute(): " + e);
                GeneralLib.reportCrash(e, result);
            }
        }
        //ce je null, pomeni da server ni dosegljiv ali pa so druge napake
        else {
            //do not show to user? what if activity is finished?
            //GeneralLib.showErrorToUser(ctx, ctx.getString(R.string.general_remote_server_error));
        }
    }

    @Override
    protected String doInBackground(Object... params) {
        return postRegistrationID();
    }


    private String postRegistrationID() {
        //pobere podatke o uporabniku iz baze
        String[] uporabnik = new Database(ctx).getRowData("uporabnik",
                new String[]{"identifier", "id_server"}, null);

        // poslji
        JSONObject object = new JSONObject();

        if(uporabnik != null) {
            // uporabnik prijavljen
            try {
                JSONObject logIn = new JSONObject();
                logIn.put("identifier", uporabnik[0]);
                logIn.put("id_server", uporabnik[1]);
                object.put("Login", logIn);

                object.put("registration_id", registration_id);

            } catch (JSONException e) {
                GeneralLib.reportCrash(e, object.toString());
                //Log.e("1kapanel", "Or could not parse malformed JSON: \"" + object.toString() + "\"");
            }

            ServerCommunication SC = new ServerCommunication(ctx);
            return SC.PostRegistrationID(object);
        }
        return null;
    }
}