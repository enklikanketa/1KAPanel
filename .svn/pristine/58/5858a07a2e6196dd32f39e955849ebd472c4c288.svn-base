package enklikanketa.com.a1kapanel;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.DashPathEffect;
import android.graphics.Paint;
import android.graphics.Path;
import android.support.v4.content.ContextCompat;
import android.util.AttributeSet;
import android.view.View;


/**
 * Created by Matej on 5/30/2016.
 */
public class CanvasView extends View {


    private Path mPath;
    Context context;
    private Paint mPaint;
    static int lines;
    private float widthPosition;

    public void setLines(int lines) {
        CanvasView.lines = lines;

    }

    public CanvasView(Context c, AttributeSet attrs) {
        super(c, attrs);



        context = c;

        // we set a new Path
        mPath = new Path();

        // and we set a new Paint with the desired attributes
        mPaint = new Paint();
      //  mPaint.setAntiAlias(true);

        mPaint.setColor( ContextCompat.getColor(context, R.color.colorMobisRed));
        mPaint.setStyle(Paint.Style.STROKE);
        //mPaint.setStrokeJoin(Paint.Join.ROUND);
        mPaint.setStrokeWidth(10);
        float[] intervals = new float[]{50.0f, 20.0f};
        float phase = 0;

        DashPathEffect dashPathEffect =
                new DashPathEffect(intervals, phase);

        mPaint.setPathEffect(dashPathEffect);

    }

    @Override
    public void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        if(mPath==null)
            mPath = new Path();
        else{
            mPath.rewind();
        }
        if(lines==1){
            mPath.moveTo(canvas.getWidth() / 2, 0);
            mPath.lineTo(widthPosition, canvas.getHeight() );

        }
        if(lines==2){
            mPath.moveTo(canvas.getWidth() / 4, 0);
            mPath.lineTo(widthPosition, canvas.getHeight());
            mPath.moveTo(3*canvas.getWidth() / 4, 0);
            mPath.lineTo(widthPosition, canvas.getHeight());
        }
        if(lines==3){
            mPath.moveTo(canvas.getWidth() / 2, 0);
            mPath.lineTo(widthPosition, canvas.getHeight() );
            mPath.moveTo(canvas.getWidth() / 6, 0);
            mPath.lineTo(widthPosition, canvas.getHeight());
            mPath.moveTo(5 * canvas.getWidth() / 6, 0);
            mPath.lineTo(widthPosition, canvas.getHeight());}

        canvas.drawPath(mPath, mPaint);

    }

    @Override
    public void invalidate() {
        super.invalidate();
    }

    public void setWidthPosition(float widthPosition) {
        this.widthPosition = widthPosition;
    }
}