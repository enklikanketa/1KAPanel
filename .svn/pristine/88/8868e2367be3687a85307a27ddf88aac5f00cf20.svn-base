package enklikanketa.com.a1kapanel;

import android.app.Fragment;
import android.app.FragmentManager;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.os.Bundle;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;

import enklikanketa.com.a1kapanel.System.Network;

public class Home extends AppCompatActivity {

    private String TAG = "Home";

    private DrawerLayout mDrawerLayout;
    private RelativeLayout slideMenu;
    private ActionBarDrawerToggle mDrawerToggle;

    // used to store app title
    private CharSequence mTitle;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.home);

        mTitle = getTitle();

        moveDrawerToTop();

        final ActionBar actionBar = getSupportActionBar();
        if (actionBar != null) {
            // enabling action bar app icon and behaving it as toggle button
            actionBar.setDisplayHomeAsUpEnabled(true);
            actionBar.setHomeButtonEnabled(true);
        }

        //premikanje menu gumba v toolabru na klik
        mDrawerToggle = new ActionBarDrawerToggle(this, mDrawerLayout,
                R.string.app_name, // nav drawer open - description for accessibility
                R.string.app_name // nav drawer close - description for accessibility
        ) {
            public void onDrawerClosed(View view) {
                // calling onPrepareOptionsMenu() to show action bar icons
                invalidateOptionsMenu();
            }

            public void onDrawerOpened(View drawerView) {
                // calling onPrepareOptionsMenu() to hide action bar icons
                invalidateOptionsMenu();
            }
        };
        mDrawerLayout.addDrawerListener(mDrawerToggle);

        if (savedInstanceState == null) {
            // on first time display view for first nav item
            if (getIntent().getExtras() != null)
                displayView(getIntent().getExtras().getInt("fragment"));
            else {
                displayView(0);
            }
        }

        //button for new survey
        LinearLayout myactivity = findViewById(R.id.layMyActivity);
        myactivity.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                Intent intent = new Intent(Home.this, MyActivity.class);
                if (Network.checkMobileInternet(Home.this, true)) {
                    startActivity(intent);
                    mDrawerLayout.closeDrawer(slideMenu);
                }
            }
        });

        //button for new vote
        LinearLayout merge = findViewById(R.id.layMerge);
        merge.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (Network.checkMobileInternet(Home.this, true)) {
                    //navigation.novVprasalnikDialog(glavnoOkno.this, true);
                    mDrawerLayout.closeDrawer(slideMenu);
                }
            }
        });

        //button for all surveys
        LinearLayout vsi = findViewById(R.id.layVsi);
        vsi.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (Network.checkMobileInternet(Home.this, true)) {
                    displayView(0);
                }
            }
        });

        //button for settings
        LinearLayout settings = findViewById(R.id.laySettings);
        settings.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                Intent intent = new Intent(Home.this, PrefsActivity.class);
                if (Network.checkMobileInternet(Home.this, true)) {
                    startActivity(intent);
                    //generalLib.finishNaprej(glavnoOkno.this, true);
                    //finish();
                    mDrawerLayout.closeDrawer(slideMenu);
                }
            }
        });

        //klik na vrstico povratne informacije
        LinearLayout feedback = findViewById(R.id.layFeedback);
        feedback.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (Network.checkMobileInternet(Home.this, true)) {
                    feedback();
                    mDrawerLayout.closeDrawer(slideMenu);
                }
            }
        });
    }

    //F for feedback
    private void feedback() {
        //pobere podatke o uporabniku iz baze
        /*String[] uporabnik = Database.getData(this, "uporabnik",
                new String[]{"uporabnisko_ime"}, null);*/

        //create variable in link for system variable
        /*String emailToLink = "";
        if(uporabnik != null)
            emailToLink = getString(R.string.feedback_sistemska_email) + uporabnik[0];*/

        //odpri anketo v webActivity
        Intent myIntent = new Intent(Home.this, WebResevanje.class);
        myIntent.putExtra("link", getString(R.string.feedbackLink)/* + emailToLink*/);
        myIntent.putExtra("naslov", getResources().getString(R.string.feedback));
        if (Network.checkMobileInternet(Home.this, true)) {
            startActivity(myIntent);
            //generalLib.finishNaprej(glavnoOkno.this, false);
        }
    }

    private void moveDrawerToTop() {
        LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        DrawerLayout drawer = (DrawerLayout) inflater.inflate(R.layout.drawer, null); // "null" is important.

        // HACK: "steal" the first child of decor view
        ViewGroup decor = (ViewGroup) getWindow().getDecorView();
        View child = decor.getChildAt(0);
        decor.removeView(child);
        LinearLayout container = (LinearLayout) drawer.findViewById(R.id.drawer_content); // This is the container we defined just now.
        container.addView(child);
        int SBH = getStatusBarHeight();
        drawer.setPadding(0, SBH, 0, 0);
        slideMenu = (RelativeLayout) drawer.findViewById(R.id.sliding_menu);
        slideMenu.setPadding(0, SBH, 0, 0);

        // Make the drawer replace the first child
        decor.addView(drawer);

        mDrawerLayout = drawer.findViewById(R.id.drawer_layout);
    }

    public int getStatusBarHeight() {
        int result = 0;
        int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
        if (resourceId > 0) {
            result = getResources().getDimensionPixelSize(resourceId);
        }
        return result;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // toggle nav drawer on selecting action bar app icon/title
        if (mDrawerToggle.onOptionsItemSelected(item)) {
            return true;
        }
        return true;
    }

    /**
     * Diplaying fragment view for selected nav drawer list item
     */
    private void displayView(int position) {

        Fragment fragment = null;
        String fragmentTag = "";
        // update the main content by replacing fragments
        switch (position) {
            case 0:
                fragment = new VsiVprasalniki();
                fragmentTag = getResources().getString(R.string.surveys);
                setTitle(R.string.surveys);
                break;
            /*case 1:
                fragment = new MobilneAnkete();
                fragmentTag = getResources().getString(com.FDV.hitra1ka.R.string.fragmentMobilni);
                break;
            case 2:
                fragment = new VsiVprasalniki();
                fragmentTag = getResources().getString(com.FDV.hitra1ka.R.string.fragmentVsi);
                break;*/
            default:
                break;
        }
        if (fragment != null) {
            FragmentManager fragmentManager = getFragmentManager();
            fragmentManager.beginTransaction()
                    .replace(R.id.main_content, fragment, fragmentTag).commit();
            mDrawerLayout.closeDrawer(slideMenu);
        }
    }

    @Override
    public void setTitle(CharSequence title) {
        mTitle = title;
        if (getSupportActionBar() != null)
            getSupportActionBar().setTitle(mTitle);
    }

    /**
     * When using the ActionBarDrawerToggle, you must call it during
     * onPostCreate() and onConfigurationChanged()...
     */
    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        // Sync the toggle state after onRestoreInstanceState has occurred.
        mDrawerToggle.syncState();
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
        // Pass any configuration change to the drawer toggls
        mDrawerToggle.onConfigurationChanged(newConfig);
    }

    //gumb nazaj na telefonu
    /*public void onBackPressed() {
        //if menu is opened, back means cose menu
        if (mDrawerLayout.isDrawerVisible(slideMenu))
            mDrawerLayout.closeDrawer(slideMenu);
            //menu is closed
        else {
            Fragment myFragment = getFragmentManager()
                    .findFragmentByTag(getResources().getString(R.string.surveys));
            //if we are in home fragment, show exit app dialog
            if (myFragment != null && myFragment.isVisible()) {
                generalLib.exitDialog(this);
            }
            //we are not in home fragment, take us home
            else {
                FragmentTransaction ft = getFragmentManager().beginTransaction();
                ft.setCustomAnimations(R.animator.nazaj_enter_frag, R.animator.nazaj_leave_frag);
                ft.replace(R.id.main_content, new Naslovna()
                        , getResources().getString(R.string.surveys));
                ft.commit();
            }
        }

    }*///konec onBackPressed()
}
