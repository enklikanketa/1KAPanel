package enklikanketa.com.a1kapanel.Services;

import com.google.firebase.messaging.FirebaseMessagingService;
import com.google.firebase.messaging.RemoteMessage;

import java.util.Map;

import enklikanketa.com.a1kapanel.Libraries.ActivityLib;
import enklikanketa.com.a1kapanel.Libraries.AlarmLib;
import enklikanketa.com.a1kapanel.Libraries.EntryLib;
import enklikanketa.com.a1kapanel.Libraries.GeofencingLib;
import enklikanketa.com.a1kapanel.Libraries.NotificationLib;
import enklikanketa.com.a1kapanel.Libraries.TrackingLib;

public class MyFirebaseMessagingService extends FirebaseMessagingService {

    public MyFirebaseMessagingService() {
        super();
    }

    @Override
    public void onMessageReceived(RemoteMessage remoteMessage) {
        // Not getting messages here? See why this may be: https://goo.gl/39bRNJ
        //Log.d("a1kapanel", "wewe Data: " + remoteMessage.getData());

        Map<String, String> data = remoteMessage.getData();
        //you can get your text message here.
        String action = data.get("action");

        // Check if message contains a data payload.
        if (remoteMessage.getData().size() > 0) {
            //Log.d("a1kapanel", "Message data payload: " + remoteMessage.getData());
        }

        // Check if message contains a notification payload.
        if (remoteMessage.getNotification() != null) {
            //Log.d("a1kapanel", "Message Notification Body: " + remoteMessage.getNotification().getBody());
        }

        // Also if you intend on generating your own notifications as a result of a received FCM
        // message, here is where that should be initiated. See sendNotification method below.

        //message to show one notification
        if(action.equals("notification")) {
            NotificationLib nlib = new NotificationLib(this);
            nlib.showNotificationSurvey(data);
        }

        //message to set alarm
        else if(action.equals("alarm")) {
            AlarmLib alib = new AlarmLib(this);
            alib.setOrUpdateNewAlarm(data);
        }

        //message to cancel alarm
        else if(action.equals("cancel_alarm")) {
            AlarmLib alib = new AlarmLib(this);
            alib.cancelAndDeleteAlarms(data.get("srv_id"));
        }

        //message to cancel alarm
        else if(action.equals("stop_repeater")) {
            AlarmLib alib = new AlarmLib(this);
            alib.cancelAndDeleteRepeater(data.get("srv_id"));
            alib.cancelAndDeleteAlarms(data.get("srv_id"));
        }

        //message to cancel geofencing
        else if(action.equals("cancel_geofencing")) {
            //Log.d("1kapanel", "wewe cancel_geofencing "+remoteMessage.getData());
            GeofencingLib glib = new GeofencingLib(this);
            glib.cancelGeofences(data.get("srv_id"));
        }

        //message to set geofences
        else if(action.equals("geofencing")) {
            //Log.d("1kapanel", "wewe geofencing "+data.toString());
            GeofencingLib glib = new GeofencingLib(this);
            glib.setOrUpdateNewGeofences(data);
        }

        //message to set nextpin activity
        else if(action.equals("activity")) {
            //Log.d("1kapanel", "wewe activity "+data.toString());
            ActivityLib aclib = new ActivityLib(this);
            aclib.setOrUpdateNewActivity(data);
        }

        //message to cancel nextpin activity
        else if(action.equals("cancel_activity")) {
            //Log.d("1kapanel", "wewe cancel_geofencing "+remoteMessage.getData());
            ActivityLib aclib = new ActivityLib(this);
            aclib.cancelActivities(data.get("srv_id"));
        }

        //message to set tracking
        else if(action.equals("tracking")) {
            //Log.d("1kapanel", "wewe tracking "+data.toString());
            TrackingLib tlib = new TrackingLib(this);
            tlib.setOrUpdateNewTracking(data);
        }

        //message to cancel tracking
        else if(action.equals("cancel_tracking")) {
            //Log.d("1kapanel", "wewe cancel_tracking "+remoteMessage.getData());
            TrackingLib tlib = new TrackingLib(this);
            tlib.cancelTracking(data.get("srv_id"), "server cancel");
        }

        //message to set data entry
        else if(action.equals("entry")) {
            //Log.d("1kapanel", "wewe entry "+data.toString());
            EntryLib elib = new EntryLib(this);
            elib.setOrUpdateNewEntry(data);
        }

        //message to cancel data entry
        else if(action.equals("cancel_entry")) {
            //Log.d("1kapanel", "wewe cancel_entry "+remoteMessage.getData());
            EntryLib elib = new EntryLib(this);
            elib.cancelEntry(data.get("srv_id"));
        }
    }

    @Override
    public void onDeletedMessages() {
        /*
         * In some situations, FCM may not deliver a message. This occurs when there are too many messages (>100)
         * pending for your app on a particular device at the time it connects or if the device hasn't connected to
         * FCM in more than one month. In these cases, you may receive a callback to FirebaseMessagingService.onDeletedMessages()
         * When the app instance receives this callback, it should perform a full sync with your app server.
         * If you haven't sent a message to the app on that device within the last 4 weeks, FCM won't call onDeletedMessages().
         * Vir: https://firebase.google.com/docs/cloud-messaging/android/send-multiple
         */
    }
}
