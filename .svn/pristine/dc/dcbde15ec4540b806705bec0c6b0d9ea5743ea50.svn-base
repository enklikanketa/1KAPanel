package enklikanketa.com.a1kapanel;

import android.app.AlarmManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.support.v4.app.NotificationCompat;
import android.util.Log;

import com.google.firebase.messaging.FirebaseMessagingService;
import com.google.firebase.messaging.RemoteMessage;

import java.util.Calendar;
import java.util.Map;
import java.util.Random;

import enklikanketa.com.a1kapanel.System.Database;

public class MyFirebaseMessagingService extends FirebaseMessagingService {

    SQLiteOpenHelper DBH;

    public MyFirebaseMessagingService() {
        super();
        Log.d("a1kapanel", "MyFirebaseMessagingService ");
    }

    @Override
    public void onMessageReceived(RemoteMessage remoteMessage) {
        // ...

        // TODO(developer): Handle FCM messages here.
        // Not getting messages here? See why this may be: https://goo.gl/39bRNJ
        Log.d("a1kapanel", "From: " + remoteMessage.getFrom());

        DBH = new Database(this);

        Map<String, String> data = remoteMessage.getData();
        //you can get your text message here.
        String action = data.get("action");

        // Check if message contains a data payload.
        if (remoteMessage.getData().size() > 0) {
            Log.d("a1kapanel", "Message data payload: " + remoteMessage.getData());
        }

        // Check if message contains a notification payload.
        if (remoteMessage.getNotification() != null) {
            Log.d("a1kapanel", "Message Notification Body: " + remoteMessage.getNotification().getBody());
        }

        // Also if you intend on generating your own notifications as a result of a received FCM
        // message, here is where that should be initiated. See sendNotification method below.

        //message to show one notification
        if(action.equals("notification"))
            showNotificationSurvey(this, data);

        //message to set alarm
        else if(action.equals("alarm"))
            setOrUpdateNewAlarm(this, data);
    }

    @Override
    public void onDeletedMessages() {
        /*
         * In some situations, FCM may not deliver a message. This occurs when there are too many messages (>100)
         * pending for your app on a particular device at the time it connects or if the device hasn't connected to
         * FCM in more than one month. In these cases, you may receive a callback to FirebaseMessagingService.onDeletedMessages()
         * When the app instance receives this callback, it should perform a full sync with your app server.
         * If you haven't sent a message to the app on that device within the last 4 weeks, FCM won't call onDeletedMessages().
         * Vir: https://firebase.google.com/docs/cloud-messaging/android/send-multiple
         */
    }

    /**
     * Set alarm - schedule a series of notifications
     * @param ctx - Context
     * @param data - Data of needed values to show notification
     */
    private void setOrUpdateNewAlarm(Context ctx, Map<String, String> data){
        //you can get your text message here.
        String link = data.get("link");
        String ank_id = data.get("ank_id");

        ContentValues initialValues = new ContentValues();
        initialValues.put("id",  ank_id);
        initialValues.put("link", link);

        //insert new survey in DB, if already exists, id is -1
        DBH.getWritableDatabase().insertWithOnConflict("surveys", null, initialValues, SQLiteDatabase.CONFLICT_IGNORE);

        int id;
        //is alarm in DB for that survey
        String[] alarm = Database.getRowData(DBH, "alarms",
                new String[]{"alarm_id"}, "srv_id='"+ank_id+"'");

        //there is alarm in DB for that survey - update it
        if(alarm != null) {
            id = Integer.parseInt(alarm[0]);
            updateAlarm(data, alarm[0]);
        }
        //there is no alarm for this survey yet, insert it
        else {
            //get alarm number
            id = getRandomInt();
            insertAlarm(data, id+"");
        }

        setAlarm(ctx, data, id);
    }

    public static void setAlarm(Context ctx, Map<String, String> data, int id){
        Intent mintent = new Intent(ctx, AlarmReceiver.class);
        mintent.putExtra("title", data.get("title"));
        mintent.putExtra("message", data.get("message"));
        mintent.putExtra("link", data.get("link"));
        mintent.putExtra("sound", data.get("sound"));
        mintent.putExtra("sender_id", id+"");
        PendingIntent sender = PendingIntent.getBroadcast(ctx, id, mintent, PendingIntent.FLAG_UPDATE_CURRENT);

        AlarmManager alarm1 = (AlarmManager) ctx.getSystemService(ALARM_SERVICE);
        if(alarm1 != null) {
            //current time in millis - add 10 seconds
            long sdl = Calendar.getInstance().getTimeInMillis()+(1000*10);
            alarm1.setRepeating(AlarmManager.RTC_WAKEUP, sdl, 1000 * 60 * Integer.parseInt(data.get("repeat")), sender);
            //alarm1.cancel(sender);
        }
    }

    private void insertAlarm(Map<String, String> data, String alarm_id){
        //vstavi v tabelo novegi alarm
        Database.insertData(DBH, "alarms", new String[][]{
                {"srv_id", data.get("ank_id")},
                {"alarm_notif_title", data.get("title")},
                {"alarm_notif_message", data.get("message")},
                {"alarm_notif_repeat", data.get("repeat")},
                {"alarm_notif_sound", data.get("sound")},
                {"alarm_id", alarm_id}});

        /*String[] survey = Database.getData(DBH, "surveys",
                new String[]{"id", "link"}, null);

        String[] alarms = Database.getData(DBH, "alarms",
                new String[]{"alarm_notif_title", "alarm_id", "srv_id", "alarm_notif_message", "alarm_notif_repeat", "alarm_notif_sound"}, null);

        Log.d("1kapanel", "wewe survey "+ Arrays.toString(survey));
        Log.d("1kapanel", "wewe alarms "+ Arrays.toString(alarms));*/

        //Database.deleteRows(DBH, "surveys", "id=123");
    }

    private void updateAlarm(Map<String, String> data, String alarm_id){
        ContentValues initialValues = new ContentValues();
        initialValues.put("alarm_notif_title",  data.get("title"));
        initialValues.put("alarm_notif_message", data.get("message"));
        initialValues.put("alarm_notif_repeat", data.get("repeat"));
        initialValues.put("alarm_notif_sound", data.get("sound"));
        initialValues.put("alarm_id", alarm_id);

        Database.updateData(DBH, "alarms", initialValues, "srv_id='"+data.get("ank_id")+"'");

        /*String[] survey = Database.getData(DBH, "surveys",
                new String[]{"id", "link"}, null);

        String[] alarms = Database.getData(DBH, "alarms",
                new String[]{"alarm_notif_title", "alarm_id", "srv_id", "alarm_notif_message", "alarm_notif_repeat", "alarm_notif_sound"}, null);

        Log.d("1kapanel", "wewe survey "+ Arrays.toString(survey));
        Log.d("1kapanel", "wewe alarms "+ Arrays.toString(alarms));*/

        //Database.deleteRows(DBH, "surveys", "id=123");
    }

    public static void showNotificationSurvey(Context ctx, Map<String, String> data) {
        //you can get your text message here.
        String message = data.get("message");
        String title = data.get("title");
        String link = data.get("link");
        String sound = data.get("sound");
        String sender_id = data.get("sender_id");

        Intent intent = new Intent(ctx, WebResevanje.class);
        intent.putExtra("link", link);

        int id;
        if(sender_id != null)
            id = Integer.parseInt(sender_id);
        else
            id = getRandomInt();

        PendingIntent pi = PendingIntent.getActivity(ctx, id, intent, PendingIntent.FLAG_UPDATE_CURRENT);

        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(ctx)
                .setTicker(ctx.getString(R.string.app_name))
                .setSmallIcon(android.R.drawable.ic_menu_myplaces)
                .setContentTitle(title)
                .setContentText(message)
                .setContentIntent(pi)
                //.addAction(action)
                //.setOngoing(true);//non removable
                .setAutoCancel(true);//removable on touch action

        if(sound != null && sound.equals("1"))
            notificationBuilder.setDefaults(Notification.DEFAULT_ALL);

        Notification notification = notificationBuilder.build();

        NotificationManager notificationManager = (NotificationManager) ctx.getSystemService(NOTIFICATION_SERVICE);
        if(notificationManager != null)
            notificationManager.notify(id, notification);
    }

    private static int getRandomInt(){
        Random r = new Random();
        return r.nextInt(2147483646-1000000) + 1000000;
    }
}
