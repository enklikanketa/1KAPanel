package enklikanketa.com.a1kapanel;

import android.content.Context;
import android.os.AsyncTask;
import android.util.Log;

import org.json.JSONException;
import org.json.JSONObject;

import enklikanketa.com.a1kapanel.System.Database;
import enklikanketa.com.a1kapanel.System.ServerCommunication;

/**
 * Created by podkrizniku on 07/12/2017.
 */

// razred Work uporabljen, da deluje progressbar med loadanjem - Logiranje
public class sendRegistrationIDTask extends AsyncTask<Object, Object, String> {

    private Context ctx;
    private String registration_id;

    public sendRegistrationIDTask(Context context, String registration_id) {
        ctx = context;
        this.registration_id = registration_id;
    }

    @Override
    protected void onPreExecute() {
        super.onPreExecute();
    }

    @Override
    protected void onPostExecute(String result) {
        super.onPostExecute(result);
        //Log.d("1kapanel", "result di" + result);

        if (result != null) {
            try {
                JSONObject obj = new JSONObject(result);

                if (obj.has("note")) {

                } else {

                }

            } catch (JSONException e) {
                Log.e("1kapanel", "sendRegistrationIDTask.class onPostExecute(): " + e);
                //generalLib.reportCrash(e, result);
            }
        }
        //ce je null, pomeni da server ni dosegljiv ali pa so druge napake
        else {

        }
    }

    @Override
    protected String doInBackground(Object... params) {
        return postDeviceInfo();
    }


    private String postDeviceInfo() {
        //pobere podatke o uporabniku iz baze
        String[] uporabnik = Database.getRowData(new Database(ctx), "uporabnik",
                new String[]{"identifier", "id_server"}, null);

        // poslji
        JSONObject object = new JSONObject();

        if(uporabnik != null) {
            // uporabnik prijavljen
            try {
                JSONObject logIn = new JSONObject();
                logIn.put("identifier", uporabnik[0]);
                logIn.put("id_server", uporabnik[1]);
                object.put("Login", logIn);

                object.put("registration_id", registration_id);

            } catch (JSONException e) {
                Log.e("1kapanel", "Or could not parse malformed JSON: \"" + object.toString() + "\"");
            }

            return ServerCommunication.PostRegistrationID(ctx, object);
        }
        return null;
    }
}